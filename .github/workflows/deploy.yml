name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Permissions pour GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Éviter les déploiements concurrents
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build et test
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test

    - name: Run linter
      run: npm run lint

    - name: Build application
      run: npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL || 'https://your-render-app.onrender.com/api/v1' }}
        VITE_APP_TITLE: "Planning Hebdomadaire"
        VITE_DEFAULT_OPENING_HOUR: "9"
        VITE_DEFAULT_CLOSING_HOUR: "22"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  # Job de déploiement (seulement sur main)
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Job de notification (optionnel)
  notify:
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build, deploy]
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "✅ Déploiement réussi sur GitHub Pages"
        else
          echo "❌ Échec du déploiement"
          exit 1
        fi